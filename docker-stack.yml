version: '3.5'

networks:
  web:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true

volumes:
  db: {}

services:
  proxy:
    image: nginx:1.13.9-alpine
    ports:
      - "80:80"
      - "3003:3003"
    networks:
      - web
    volumes:
      - ./resources/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      placement:
        constraints: [node.role == manager]

  insight:
    image: ifishgroup/insight:${TAG}
    networks:
      - web
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s

  api:
    image: ifishgroup/insight-api:${TAG}
    networks:
      - web
      - backend
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
  
  mongodb:
    image: mongo:3.6.3
    networks:
      - backend
    ports:
      - "27017:27017"
    volumes: 
      - db:/data/db

  mongoimport:
    image: ifishgroup/insight-import:${TAG}
    networks:
      - backend
    depends_on:
      - mongodb
    command: ["./wait-for-it.sh", "mongodb:27017", "--", "mongoimport", "--host", "mongodb", "--db", "Insight", "--collection", "users", "--type", "json", "--file", "insertUsers.json", "--drop", "--upsert", "--jsonArray"]
    deploy:
      restart_policy:
        condition: none